{"version":3,"sources":["Api.js","Auth.js","App.js","index.js"],"names":["axios","create","baseURL","headers","authentication","getAccessToken","signOut","emails","decodeJWT","App","state","status_message","user_address","user_name","user_student_id","user_year","user_program","user_faculty","all_user_data","current_user","Auth","currentUser","this","getUserData","api","method","url","Authorization","getToken","then","response","data","setState","address","name","student_id","year","program","faculty","catch","error","console","log","Container","Navbar","bg","variant","className","Brand","Text","Form","Group","as","Row","controlId","Label","column","sm","Col","Control","plaintext","readOnly","defaultValue","placeholder","value","onChange","event","target","Button","onClick","saveUserData","deleteUserData","logout","Alert","getAllUserData","Table","striped","bordered","hover","map","listValue","index","key","email","Component","initialize","instance","tenant","signInPolicy","applicationId","cacheLocation","scopes","redirectUri","validateAuthority","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b84ad17.chunk.js","sourcesContent":["import axios from 'axios';\n\n/**\n * URLs and other api constants\n */\nconst constants = {\n    api: {\n        baseURL: 'https://aspapimanagementservicev2.azure-api.net/aspfunctionappv8',\n    },\n};\n\n/**\n * Create an Axios Client with defaults\n */\nexport default axios.create({\n    baseURL: constants.api.baseURL,\n    headers: {'Ocp-Apim-Subscription-Key': 'dd4b9efb1bef436da2a9c5499764077c' }\n});","import authentication from '@kdpw/msal-b2c-react'\nimport decodeJWT from 'jwt-decode'; \n\nclass Auth {\n  isLoggedIn() {\n    if (authentication.getAccessToken()) {\n      return true;\n    }\n    return false;\n  }\n\n  logout() {\n    authentication.signOut();\n  }\n\n  getToken() {\n    return authentication.getAccessToken();\n  }\n\n  currentUser() {\n    const decoded = decodeJWT(authentication.getAccessToken());\n    return {\n      emails: decoded.emails,\n    };\n  }\n}\n\nexport default new Auth();","import React, { Component } from 'react';\nimport { \n    Container, \n    Navbar, \n    Button, \n    Form,\n    Table,\n    Col,\n    Row,\n    Alert } from 'react-bootstrap';\n\nimport './App.css';\nimport api from './Api';\nimport Auth from './Auth';\n\nclass App extends Component {\n    state = {\n        status_message: '',\n        user_address: '',\n        user_name: '',\n        user_student_id: '',\n        user_year: '',\n        user_program: '',\n        user_faculty: '',\n        all_user_data: [],\n        current_user: Auth.currentUser().emails[0]\n    };\n\n    componentDidMount() {\n        this.getUserData();\n    }\n\n    getUserData () {\n        api({\n            method: 'get',\n            url: '/GetData?email=' + this.state.current_user,\n            headers: { Authorization: Auth.getToken() }\n        }).then((response) => {\n            if(response.data[0])\n            {\n                this.setState({\n                    user_address: response.data[0].address,\n                    user_name: response.data[0].name,\n                    user_student_id: response.data[0].student_id,\n                    user_year: response.data[0].year,\n                    user_program: response.data[0].program,\n                    user_faculty: response.data[0].faculty,\n                    status_message: 'Data about the logged in user recevied successfully .'\n                });\n            }\n        })\n        .catch((error) => {\n            this.setState({status_message: 'Error getting data about logged in user.'});\n        });\n    };\n\n    saveUserData() {\n        api({\n            method: 'put',\n            url: '/SaveData?email=' + this.state.current_user,\n            data: {\n                address: this.state.user_address,\n                name: this.state.user_name,\n                student_id: this.state.user_student_id,\n                year: this.state.user_year,\n                program: this.state.user_program,\n                faculty: this.state.user_faculty\n            },\n            headers: { Authorization: Auth.getToken() }\n        }).then((response) => {\n            this.setState({status_message: 'Data about the user saved successfully.'});\n        })\n        .catch((error) => {\n            console.log(error);\n            this.setState({status_message: 'Error saving data about the user.'});\n        });\n    }\n\n    deleteUserData() {\n        api({\n            method: 'delete',\n            url: '/DeleteData?email=' + this.state.current_user,\n            headers: { Authorization: Auth.getToken() }\n        }).then((response) => {\n            this.setState({\n                user_address: '',\n                user_name: '',\n                user_student_id: '',\n                user_year: '',\n                user_program: '',\n                user_faculty: '',\n                status_message: 'Data about the user deleted successfully.'\n            });\n        })\n        .catch((error) => {\n            this.setState({status_message: 'Error deleting data about the user.'});\n        });\n    }\n\n    getAllUserData () {\n        api({\n            method: 'get',\n            url: '/GetAllData',\n            headers: { Authorization: Auth.getToken() }\n        }).then((response) => {\n            this.setState({\n                all_user_data: response.data,\n                status_message: 'Data about all users received successfully.'\n            })\n        })\n        .catch((error) => {\n            this.setState({status_message: 'Error getting data about logged in user.'});\n        });\n    };\n\n    render() {\n        return (\n            <Container>\n                <Navbar bg=\"dark\" variant=\"dark\" className=\"justify-content-between\">\n                    <Navbar.Brand>\n                        My Profile\n                    </Navbar.Brand>\n                    \n                    <Navbar.Text>\n                        Signed in as: {this.state.current_user}\n                    </Navbar.Text>\n                </Navbar>\n\n                <Form className=\"box\">\n                    <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                        <Form.Label column sm=\"2\">\n                        Email\n                        </Form.Label>\n                        <Col sm=\"10\">\n                            <Form.Control plaintext readOnly defaultValue={this.state.current_user} />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row}>\n                        <Form.Label column sm=\"2\">\n                            address\n                        </Form.Label>\n                        <Col sm=\"10\">\n                            <Form.Control placeholder=\"Enter your address\" value={this.state.user_address || ''} onChange={(event) => { this.setState({ user_address: event.target.value,}); }}/> \n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}>\n                        <Form.Label column sm=\"2\">\n                            Name\n                        </Form.Label>\n                        <Col sm=\"10\">\n                            <Form.Control placeholder=\"Enter your name\" value={this.state.user_name || ''} onChange={(event) => { this.setState({ user_name: event.target.value,}); }}/>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}>\n                        <Form.Label column sm=\"2\">\n                            Student ID\n                        </Form.Label>\n                        <Col sm=\"10\">\n                            <Form.Control placeholder=\"Enter your student id\" value={this.state.user_student_id || ''} onChange={(event) => { this.setState({ user_student_id: event.target.value,}); }}/>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}>\n                        <Form.Label column sm=\"2\">\n                            Year\n                        </Form.Label>\n                        <Col sm=\"10\">\n                            <Form.Control placeholder=\"Enter your year\" value={this.state.user_year || ''} onChange={(event) => { this.setState({ user_year: event.target.value,}); }}/>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}>\n                        <Form.Label column sm=\"2\">\n                            Program\n                        </Form.Label>\n                        <Col sm=\"10\">\n                            <Form.Control placeholder=\"Enter your program\" value={this.state.user_program || ''} onChange={(event) => { this.setState({ user_program: event.target.value,}); }}/>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}>\n                        <Form.Label column sm=\"2\">\n                            Faculty\n                        </Form.Label>\n                        <Col sm=\"10\">\n                            <Form.Control placeholder=\"Enter your faculty\" value={this.state.user_faculty || ''} onChange={(event) => { this.setState({ user_faculty: event.target.value,}); }}/>\n                        </Col>\n                    </Form.Group>\n                    <div className=\"buttonContainer\">\n                        <Button variant=\"primary\" className=\"buttonGap\" onClick={() => this.saveUserData()}>\n                            Save Data\n                        </Button>\n                        <Button variant=\"danger\" className=\"buttonGap\" onClick={() => this.deleteUserData()} >\n                            Delete My Data\n                        </Button>\n                        <Button variant=\"info\" onClick={() => Auth.logout()}>\n                            Sign Out\n                        </Button>\n                    </div>\n                </Form>\n\n                <Alert variant='info'>\n                    Status: {this.state.status_message}\n                </Alert>\n                \n                <div className=\"box boxGap\">\n                    <div className=\"buttonContainer\">\n                        <Button variant=\"success\" onClick={() => this.getAllUserData()}>\n                            Get All Data\n                        </Button>\n                    </div>\n                    <Table striped bordered hover>\n                        <thead>\n                            <tr>\n                                <th>User</th>\n                                <th>Name</th>\n                                <th>Student ID</th>\n                                <th>Year</th>\n                                <th>Program</th>\n                                <th>Faculty</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.all_user_data.map(( listValue, index ) => {\n                                    return (\n                                        <tr key={index}>\n                                            <td>{listValue.email}</td>\n                                            <td>{listValue.name}</td>\n                                            <td>{listValue.student_id}</td>\n                                            <td>{listValue.year}</td>\n                                            <td>{listValue.program}</td>\n                                            <td>{listValue.faculty}</td>\n                                        </tr>\n                                    );\n                                })\n                            }\n                        </tbody>\n                    </Table>\n                </div>\n            </Container>\n        )\n    };\n};\n\nexport default App;\n","// index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport authentication from '@kdpw/msal-b2c-react';\nimport App from './App';\n\nauthentication.initialize({\n    instance: 'https://aspb2ctenantv7.b2clogin.com/tfp/',\n    tenant: 'aspb2ctenantv7.onmicrosoft.com',\n    signInPolicy: 'B2C_1_SignUpSignIn',\n    applicationId: '62473786-71dc-477d-a9b5-cf905930e4d3',\n    cacheLocation: 'sessionStorage',\n    scopes: ['profile', 'openid'],\n    redirectUri: 'https://aspstorageaccountv2.z9.web.core.windows.net/',\n    validateAuthority: false\n});\n\nauthentication.run(() => {\n    ReactDOM.render(<App />, document.getElementById('root'));\n});"],"sourceRoot":""}